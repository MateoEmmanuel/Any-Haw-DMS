DELIMITER //

-- Update Trigger for Image_List
CREATE TRIGGER UpdateLog_ImageList
AFTER UPDATE ON Image_List
FOR EACH ROW
BEGIN
    INSERT INTO System_Log (
        Action_Type, 
        Table_Name, 
        Affected_Row_ID, 
        Old_Data, 
        NEW_Data, 
        Full_Details
    ) 
    VALUES (
        'UPDATE', 
        'Image_List', 
        OLD.Image_ID, 
        'ID does not change!', 
        'ID does not change!', 
        CONCAT(
            'Updated an image | Image ID: ', OLD.Image_ID,
            ' | Action Done at (', DATE_FORMAT(NOW(), '%H:%i:%s - %m/%d/%Y'), ')'
        )
    );
END //

-- Update Trigger for Food_Category
CREATE TRIGGER UpdateLog_FoodCategory
AFTER UPDATE ON Food_Category
FOR EACH ROW
BEGIN
    INSERT INTO System_Log (
        Action_Type, 
        Table_Name, 
        Affected_Row_ID, 
        Old_Data, 
        NEW_Data, 
        Full_Details
    ) 
    VALUES (
        'UPDATE', 
        'Food_Category', 
        OLD.F_Category_ID, 
        concat(OLD.F_Category_ID, ' - ', OLD.Category_Name), 
        concat(OLD.F_Category_ID, ' - ', NEW.Category_Name), 
        CONCAT(
            'Updated a food category | Category Name: ', OLD.Category_Name,
            ', To: ', NEW.Category_Name,
            ' | Action Done at (', DATE_FORMAT(NOW(), '%H:%i:%s - %m/%d/%Y'), ')'
        )
    );
END //

-- Update Trigger for Food_List
CREATE TRIGGER UpdateLog_FoodList
AFTER UPDATE ON Food_List
FOR EACH ROW
BEGIN
	
    DECLARE FoodName VARCHAR(255);
    DECLARE Availability VARCHAR(255);
    
    IF OLD.Food_Name != NEW.Food_Name THEN
		SET FoodName = Concat('Updated a food item | Food Name: ', OLD.Food_Name,", To: ", NEW.Food_Name);
	ELSE
		SET FoodName = Concat('Updated a food item | Food Name: ', OLD.Food_Name);
    END IF;
    
    IF OLD.Availability != NEW.Availability THEN
		SET Availability = Concat(' | Availability: ', OLD.Availability,", To: ", NEW.Availability);
	ELSE
		SET Availability = Concat(' | Availability: ', OLD.Availability);
    END IF;
    

    INSERT INTO System_Log (
        Action_Type, 
        Table_Name, 
        Affected_Row_ID, 
        Old_Data, 
        NEW_Data, 
        Full_Details
    ) 
    VALUES (
        'UPDATE', 
        'Food_List', 
        OLD.Food_ID, 
        concat(OLD.Food_ID, ' - ', OLD.Food_Name, ' - ', OLD.Availability),  
        concat(OLD.Food_ID, ' - ', NEW.Food_Name, ' - ', NEW.Availability), 
        CONCAT(FoodName, Availability, ' | Action Done at (', DATE_FORMAT(NOW(), '%H:%i:%s - %m/%d/%Y'), ')'
        )
    );
END //

-- Update Trigger for Normal_Food_List
CREATE TRIGGER UpdateLog_NormalFoodList
AFTER UPDATE ON Normal_Food_List 
FOR EACH ROW
BEGIN
    DECLARE Old_FoodName VARCHAR(255);
    DECLARE Old_FoodCategory VARCHAR(255);
    DECLARE New_FoodName VARCHAR(255);
    DECLARE New_FoodCategory VARCHAR(255);
    DECLARE FoodName VARCHAR(255);
	DECLARE Category VARCHAR(255);
    DECLARE Description VARCHAR(255);
    DECLARE Price VARCHAR(255);
    DECLARE CodeName VARCHAR(255);
        
    -- Fetch Old Food Name and Category
    SELECT FL.Food_Name, FC.Category_Name
    INTO Old_FoodName, Old_FoodCategory
    FROM Food_List FL
    JOIN Food_Category FC ON FC.F_Category_ID = OLD.F_Category_ID
    WHERE FL.Food_ID = OLD.Food_ID;
    
    -- Fetch New Food Name and Category
    SELECT FL.Food_Name, FC.Category_Name
    INTO New_FoodName, New_FoodCategory
    FROM Food_List FL
    JOIN Food_Category FC ON FC.F_Category_ID = NEW.F_Category_ID
    WHERE FL.Food_ID = NEW.Food_ID;
    
    
    IF OLD.Food_Name != NEW.Food_Name THEN
		SET FoodName = Concat('Updated a normal food item | Food Name: ', Old_FoodName, ', To: ', New_FoodName);
	ELSE
		SET FoodName = Concat('Updated a normal food item | Food Name: ', Old_FoodName);
    END IF;
    
    IF OLD.F_Category_ID != NEW.F_Category_ID THEN
		SET Category = Concat(' | Category: ', Old_FoodCategory, ', To: ', New_FoodCategory);
	ELSE
		SET Category = Concat(' | Category: ', Old_FoodCategory);
    END IF;
    
    IF OLD.Description != NEW.Description THEN
		SET Description = Concat(' | Description: ', IFNULL(OLD.Description, 'NULL'), ', To: ', IFNULL(OLD.Description, 'NULL'));
	ELSE
		SET Description = Concat(' | Description: ', IFNULL(OLD.Description, 'NULL'));
	End IF;
    
    IF OLD.Price != NEW.Price THEN
		SET Price = concat(' | Price: ', OLD.Price, ', To: ', NEW.Price);
	ELSE
		SET Price = concat(' | Price: ', OLD.Price);
	End IF;
    
    IF OLD.Code_Name != NEW.Code_Name THEN
		SET CodeName = Concat(' | Code Name: ', OLD.Code_Name, ', To: ', NEW.Code_Name);
	Else
		SET CodeName = Concat(' | Code Name: ', OLD.Code_Name);
	END IF;
        
    -- Insert Log Data
    INSERT INTO System_Log (
        Action_Type, 
        Table_Name, 
        Affected_Row_ID, 
        Old_Data, 
        NEW_Data, 
        Full_Details
    ) 
    VALUES (
        'UPDATE', 
        'Normal_Food_List', 
        OLD.N_List_ID, 
        CONCAT(OLD.N_List_ID, ' - ', OLD.Food_ID, ' - ', OLD.Code_Name, ' - ', OLD.F_Category_ID, ' - ', OLD.Image_ID, ' - ', IFNULL(OLD.Description, 'NULL'), ' - ', OLD.Price),
        CONCAT(OLD.N_List_ID, ' - ', OLD.Food_ID, ' - ', NEW.Code_Name, ' - ', NEW.F_Category_ID, ' - ', OLD.Image_ID, ' - ', IFNULL(NEW.Description, 'NULL'), ' - ', NEW.Price), 
        CONCAT( FoodName, Category , ' | Image ID: ', OLD.Image_ID, Description, Price, CodeName,
		' | Action Done at (', DATE_FORMAT(NOW(), '%H:%i:%s - %m/%d/%Y'), ')'
        )
    );
END //


-- Update Trigger for Drink_Category
CREATE TRIGGER UpdateLog_DrinkCategory
AFTER UPDATE ON Drink_Category
FOR EACH ROW
BEGIN
    INSERT INTO System_Log (
        Action_Type, 
        Table_Name, 
        Affected_Row_ID, 
        Old_Data, 
        NEW_Data, 
        Full_Details
    ) 
    VALUES (
        'UPDATE', 
        'Drink_Category', 
        OLD.Dr_Category_ID, 
        Concat(OLD.Dr_Category_ID, ' - ', OLD.Category_Name), 
        Concat(NEW.Dr_Category_ID, ' - ', NEW.Category_Name), 
        CONCAT(
            'Updated a drink category | Category Name: ', OLD.Category_Name, 
            ', To: ', NEW.Category_Name,
            ' | Action Done at (', DATE_FORMAT(NOW(), '%H:%i:%s - %m/%d/%Y'), ')'
        )
    );
END //

-- Update Trigger for Drink_List
CREATE TRIGGER UpdateLog_DrinkList
AFTER UPDATE ON Drink_List
FOR EACH ROW
BEGIN
    Declare OLD_DrinkCategory varchar(255);
    Declare NEW_DrinkCategory varchar(255);
    Declare DrinkName varchar(255);
    Declare CodeName varchar(255);
    Declare Category varchar(255);
    Declare Price varchar(255);
    Declare Availability varchar(255);

	Select Category_Name Into OLD_DrinkCategory
    From Drink_Category 
    Where Dr_Category_ID =  OLD.Dr_Category_ID;

    Select Category_Name Into NEW_DrinkCategory
    From Drink_Category 
    Where Dr_Category_ID =  NEW.Dr_Category_ID;
    
    IF OLD.Drink_Name != NEW.Drink_Name THEN
		SET DrinkName = Concat('Updated a drink | Drink Name: ', OLD.Drink_Name, ', To: ', NEW.Drink_Name);
	ELSE
		SET DrinkName = Concat('Updated a drink | Drink Name: ', OLD.Drink_Name);
	END IF;

	IF OLD.Code_Name != NEW.Code_Name THEN
		SET CodeName = Concat(' | Code Name: ', OLD.Code_Name, ', To: ', NEW.Code_Name);
	ELSE
		SET CodeName = Concat(' | Code Name: ', OLD.Code_Name);
	END IF;

	IF OLD.Dr_Category_ID != NEW.Dr_Category_ID THEN
		SET Category = Concat(' | Category: ', OLD_DrinkCategory, ', To: ', NEW_DrinkCategory);
	ELSE
		SET Category = Concat(' | Category: ', OLD_DrinkCategory);
	END IF;

	IF OLD.Price != NEW.Price THEN
		SET Price = Concat(' | Price: ', OLD.Price, ', To: ', NEW.Price);
	ELSE
		SET Price = Concat(' | Price: ', OLD.Price);
	END IF;

	IF OLD.Availability != NEW.Availability THEN
		SET Availability = Concat(' | Availability: ', OLD.Availability, ', To: ', NEW.Availability);
	ELSE
		SET Availability = Concat(' | Availability: ', OLD.Availability);
	END IF;

    INSERT INTO System_Log (
        Action_Type, 
        Table_Name, 
        Affected_Row_ID, 
        Old_Data, 
        NEW_Data, 
        Full_Details
    ) 
    VALUES (
        'UPDATE', 
        'Drink_List', 
        OLD.Drink_ID, 
        Concat(OLD.Drink_ID, ' - ', OLD.Drink_Name, ' - ', OLD.Code_Name, ' - ', OLD.Dr_Category_ID, ' - ', OLD.Image_ID, ' - ', OLD.Price, ' - ', OLD. Availability), 
        Concat(OLD.Drink_ID, ' - ', NEW.Drink_Name, ' - ', NEW.Code_Name, ' - ', NEW.Dr_Category_ID, ' - ', OLD.Image_ID, ' - ', NEW.Price, ' - ', NEW. Availability), 
        CONCAT(DrinkName, CodeName, Category, ' | Image ID: ', OLD.Image_ID, Price, Availability,
		' | Action Done at (', DATE_FORMAT(NOW(), '%H:%i:%s - %m/%d/%Y'), ')'
        )
    );
END //

-- Update Trigger for Dessert_Category
CREATE TRIGGER UpdateLog_DessertCategory
AFTER UPDATE ON Dessert_Category
FOR EACH ROW
BEGIN
    INSERT INTO System_Log (
        Action_Type, 
        Table_Name, 
        Affected_Row_ID, 
        Old_Data, 
        NEW_Data, 
        Full_Details
    ) 
    VALUES (
        'UPDATE', 
        'Dessert_Category', 
        OLD.De_Category_ID, 
        Concat(OLD.De_Category_ID, ' - ', OLD.Category_Name), 
        Concat(NEW.De_Category_ID, ' - ', NEW.Category_Name), 
        CONCAT(
            'Updated a dessert category | Category Name: ', OLD.Category_Name, 
            ', To: ', NEW.Category_Name,
            ' | Action Done at (', DATE_FORMAT(NOW(), '%H:%i:%s - %m/%d/%Y'), ')'
        )
    );
END //

-- Update Trigger for Dessert_List
CREATE TRIGGER UpdateLog_DessertList
AFTER UPDATE ON Dessert_List
FOR EACH ROW
BEGIN
    Declare OLD_DessertCategory varchar(255);
    Declare NEW_DessertCategory varchar(255);
	Declare DrinkName varchar(255);
    Declare CodeName varchar(255);
    Declare Category varchar(255);
    Declare Price varchar(255);
    Declare Availability varchar(255);

    SELECT Category_Name INTO OLD_DessertCategory
    FROM Dessert_Category 
    WHERE De_Category_ID = OLD.De_Category_ID;
    
	SELECT Category_Name INTO NEW_DessertCategory
    FROM Dessert_Category 
    WHERE De_Category_ID = NEW.De_Category_ID;
    
    IF OLD.Dessert_Name != NEW.Dessert_Name THEN
		SET DessertName = Concat('Updated a drink | Drink Name: ', OLD.Dessert_Name, ', To: ', NEW.Dessert_Name);
	ELSE
		SET DessertName = Concat('Updated a drink | Drink Name: ', OLD.Dessert_Name);
	END IF;

	IF OLD.Code_Name != NEW.Code_Name THEN
		SET CodeName = Concat(' | Code Name: ', OLD.Code_Name, ', To: ', NEW.Code_Name);
	ELSE
		SET CodeName = Concat(' | Code Name: ', OLD.Code_Name);
	END IF;

	IF OLD.De_Category_ID != NEW.De_Category_ID THEN
		SET Category = Concat(' | Category: ', OLD_DessertCategory, ', To: ', NEW_DessertCategory);
	ELSE
		SET Category = Concat(' | Category: ', OLD_DessertCategory);
	END IF;

	IF OLD.Price != NEW.Price THEN
		SET Price = Concat(' | Price: ', OLD.Price, ', To: ', NEW.Price);
	ELSE
		SET Price = Concat(' | Price: ', OLD.Price);
	END IF;

	IF OLD.Availability != NEW.Availability THEN
		SET Availability = Concat(' | Availability: ', OLD.Availability, ', To: ', NEW.Availability);
	ELSE
		SET Availability = Concat('| Availability: ', OLD.Availability);
	END IF;

    INSERT INTO System_Log (
        Action_Type, 
        Table_Name, 
        Affected_Row_ID, 
        Old_Data, 
        NEW_Data, 
        Full_Details
    ) 
    VALUES (
        'UPDATE', 
        'Dessert_List', 
        OLD.Dessert_ID, 
        CONCAT(OLD.Dessert_ID, ' - ', OLD.Dessert_Name, ' - ', OLD.De_Category_ID, ' - ', OLD.Code_Name, ' - ', OLD.Image_ID, ' - ', OLD.Price , ' - ', OLD.Availability),
        CONCAT(OLD.Dessert_ID, ' - ', NEW.Dessert_Name, ' - ', NEW.De_Category_ID, ' - ', NEW.Code_Name, ' - ', OLD.Image_ID, ' - ', NEW.Price , ' - ', NEW.Availability),
        CONCAT(DessertName,Category,CodeName,' | Image ID: ', OLD.Image_ID,Price,Availability,
        ' | Action Done at (', DATE_FORMAT(NOW(), '%H:%i:%s - %m/%d/%Y'), ')'
        )
    );
END //

-- Update Trigger for Combo_Category
CREATE TRIGGER UpdateLog_ComboCategory
AFTER UPDATE ON Combo_Category
FOR EACH ROW
BEGIN
    INSERT INTO System_Log (
        Action_Type, 
        Table_Name, 
        Affected_Row_ID, 
        Old_Data, 
        NEW_Data, 
        Full_Details
    ) 
    VALUES (
        'UPDATE', 
        'Combo_Category', 
        OLD.C_Category_ID, 
        CONCAT(OLD.C_Category_ID, ' - ', OLD.Category_Name), 
        CONCAT(OLD.C_Category_ID, ' - ', NEW.Category_Name),
        CONCAT(
            'Updated a combo category | Category Name: ', OLD.Category_Name,
            ', To: ', NEW.Category_Name
            ' | Action Done at (', DATE_FORMAT(NOW(), '%H:%i:%s - %m/%d/%Y'), ')'
        )
    );
END //

-- Update Trigger for Combo_Food_Details
CREATE TRIGGER UpdateLog_ComboFoodDetails
AFTER UPDATE ON Combo_Food_Details
FOR EACH ROW
BEGIN
	DECLARE Description VARCHAR(255);
    DECLARE Price VARCHAR(255);
    
    IF OLD.Description != NEW.Description THEN
		SET Description = Concat(' | Description: ', IFNULL(OLD.Description,"NULL"), ', To: ', IFNULL(NEW.Description,"NULL"));
	ELSE
		SET Description = Concat(' | Description: ', IFNULL(OLD.Description,"NULL"));
	END IF;
    
    IF OLD.Price != NEW.Price THEN
		SET Price = Concat(' | Price: ', OLD.Price, ', To: ', OLD.Price);
	ELSE
		SET Price = Concat(' | Price: ', OLD.Price);
	END IF;
    
    INSERT INTO System_Log (
        Action_Type, 
        Table_Name, 
        Affected_Row_ID, 
        Old_Data, 
        NEW_Data, 
        Full_Details
    ) 
    VALUES (
        'UPDATE', 
        'Combo_Food_Details', 
        OLD.C_Details_ID, 
        CONCAT(OLD.C_Details_ID, ' - ', OLD.Image_ID, ' - ', OLD.Price, ' - ', OLD.Description), 
        CONCAT(OLD.C_Details_ID, ' - ', OLD.Image_ID, ' - ', NEW.Price, ' - ', NEW.Description), 
        CONCAT('Updated NEW combo food details | Image_ID: ', OLD.Image_ID, Description,Price, 
		' | Action Done at (', DATE_FORMAT(NOW(), '%H:%i:%s - %m/%d/%Y'), ')'
        )
    );
END //

-- Update Trigger for Combo_Food_List
CREATE TRIGGER UpdateLog_ComboFoodList
AFTER UPDATE ON Combo_Food_List
FOR EACH ROW
BEGIN
    DECLARE Old_CategoryName VARCHAR(255);
    DECLARE NEW_CategoryName VARCHAR(255);
    Declare ComboName varchar(255);
    Declare Category varchar(255);

    SELECT Category_Name INTO Old_CategoryName
    FROM Combo_Category 
    WHERE C_Category_ID = OLD.C_Category_ID;
	
    SELECT Category_Name INTO NEW_CategoryName
    FROM Combo_Category 
    WHERE C_Category_ID = NEW.C_Category_ID;
    
	IF OLD.Code_Name != NEW.Code_Name THEN
		SET CodeName = Concat(' | Code Name: ', OLD.Code_Name, ', To: ', NEW.Code_Name);
	ELSE
		SET CodeName = Concat(' | Code Name: ', OLD.Code_Name);
	END IF;
    
	IF OLD.C_Category_ID != NEW.C_Category_ID THEN
		SET Category = Concat(' | Category: ', Old_CategoryName, ', To: ', NEW_CategoryName);
	ELSE
		SET Category = Concat(' | Category: ', Old_CategoryName);
	END IF;
    
    INSERT INTO System_Log (
        Action_Type, 
        Table_Name, 
        Affected_Row_ID, 
        Old_Data, 
        NEW_Data, 
        Full_Details
    ) 
    VALUES (
        'UPDATE', 
        'Combo_Food_List', 
        OLD.Combo_List_ID, 
        CONCAT(OLD.Combo_List_ID, ' - ', OLD.Code_Name, ' - ', OLD.C_Category_ID, ' - ', OLD.C_Details_ID),
        CONCAT(OLD.Combo_List_ID, ' - ', NEW.Code_Name, ' - ', NEW.C_Category_ID, ' - ', OLD.C_Details_ID),
        CONCAT(Code_Name, Cateogry,
        ' | Action Done at (', DATE_FORMAT(NOW(), '%H:%i:%s - %m/%d/%Y'), ')'
        )
    );
END //

-- Update Trigger for Combo_Food_Organizer
CREATE TRIGGER UpdateLog_ComboFoodOrganizer
AFTER UPDATE ON Combo_Food_Organizer
FOR EACH ROW
BEGIN
    DECLARE OLD_ComboListName VARCHAR(255);
    DECLARE NEW_ComboListName VARCHAR(255);
    DECLARE ItemType VARCHAR(255);
    DECLARE ItemID VARCHAR(255);
    DECLARE ComboList VARCHAR(255);

    SELECT Code_Name INTO OLD_ComboListName
    FROM Combo_Food_List 
    WHERE Combo_List_ID = OLD.Combo_List_ID;

	SELECT Code_Name INTO NEW_ComboListName
    FROM Combo_Food_List 
    WHERE Combo_List_ID = NEW.Combo_List_ID;

	IF NEW.Item_Type != OLD.Item_Type THEN
		SET ItemType = concat('Updated a combo food organizer | Item Type: ', OLD.Item_Type, ', To: ', NEW.Item_Type);
	ELSE
		SET ItemType = concat('Updated a combo food organizer | Item Type: ', OLD.Item_Type);
	END IF;
    
    IF NEW.Item_Type != OLD.Item_Type THEN
		SET ItemID = concat(' | Item ID: ', OLD.Item_ID, ', To: ', NEW.Item_ID);
	ELSE
		SET ItemID = concat(' | Item ID: ', OLD.Item_ID);
	END IF;
    
    IF NEW.Item_Type != OLD.Item_Type THEN
		SET ComboList = concat(' | Combo List: ', OLD_ComboListName, ', To: ',NEW_ComboListName);
	ELSE
		SET ComboList = concat(' | Combo List: ', OLD_ComboListName);
	END IF;
    
    INSERT INTO System_Log (
        Action_Type, 
        Table_Name, 
        Affected_Row_ID, 
        Old_Data, 
        NEW_Data, 
        Full_Details
    ) 
    VALUES (
        'UPDATE', 
        'Combo_Food_Organizer', 
        OLD.Combo_Food_ID, 
        CONCAT(OLD.Combo_Food_ID, ' - ', OLD.Item_Type, ' - ', OLD.Item_ID, ' - ', OLD.Combo_List_ID),
        CONCAT(OLD.Combo_Food_ID, ' - ', NEW.Item_Type, ' - ', NEW.Item_ID, ' - ', OLD.Combo_List_ID), 
        CONCAT(ItemType, ItemID, ComboList,
        ' | Action Done at (', DATE_FORMAT(NOW(), '%H:%i:%s - %m/%d/%Y'), ')'
        )
    );
END //

-- Update Trigger for Discount_Table
CREATE TRIGGER UpdateLog_Discount
AFTER UPDATE ON Discount_Table
FOR EACH ROW
BEGIN
    DECLARE DiscountName VARCHAR(255);
    DECLARE DiscountPercent VARCHAR(255);

	IF NEW.Discount_Name != OLD.Discount_Name THEN
		SET DiscountName = Concat('Updated a discount | Discount Name: ', OLD.Discount_Name, ', To: ', NEW.Discount_Name);
	ELSE
		SET DiscountName = Concat('Updated a discount | Discount Name: ', OLD.Discount_Name);
	END IF;

	IF NEW.Discount_Percent != OLD.Discount_Percent THEN
		SET DiscountPercent = Concat(' | Percent: ', OLD.Discount_Percent, '%', ', To: ', NEW.Discount_Percent);
	ELSE
		SET DiscountPercent = Concat(' | Percent: ', OLD.Discount_Percent, '%');
	END IF;

    INSERT INTO System_Log (
        Action_Type, 
        Table_Name, 
        Affected_Row_ID, 
        Old_Data, 
        NEW_Data, 
        Full_Details
    ) 
    VALUES (
        'UPDATE', 
        'Discount_Table', 
        OLD.Discount_ID, 
        'N/A', 
        CONCAT(OLD.Discount_ID, ' - ', NEW.Discount_Name, ' - ', NEW.Discount_Percent, '%'), 
        CONCAT(DiscountName, DiscountPercent, 
        ' | Action Done at (', DATE_FORMAT(NOW(), '%H:%i:%s - %m/%d/%Y'), ')'
        )
    );
END //

